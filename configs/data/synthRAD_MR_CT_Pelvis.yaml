##### Dataset Processing Code Implementation #####
# Save data in H5 format
# Store patient-specific data as datasets within each group in the H5 file (e.g., Groups: MR, CT, synCT)
# Each dataset should be in the shape [H, W, D] and normalized between -1 and 1
# And all the data be interpolated into same height, width
# Detailed modifications can be made through transform.py

#SynthRAD_CBCT_CT_Brain_newdivisionEQ_std
## Core setting (Important)
_target_: src.data.SynthRAD_MR_CT_Pelvis_datamodule.SynthRAD_MR_CT_Pelvis_DataModule
name: SynthRAD_Sy nCT_CT_Brain
data_dir: ${paths.root_dir}/data/SynthRAD_CBCT_CT_Brain
data_group_1: "CBCT"
data_group_2: "CT"
data_group_3: "mask" # If exist put it, or null # Regist:syn_CT
is_3d: False # True: 3D processing, False: 2D processing
batch_size: 2 #5 #10 #4 #30 #16 #12 #2 #1
num_workers: 6 # 3
pin_memory: True
use_split_inference: True # Inference for valid and test is divided into half from the original image (for memory issue)

## Dataset File Name
train_file: 'preprocessed_data_NoPercentClip_final2.h5'
val_file: 'preprocessed_data_NoPercentClip_final2.h5'
test_file: 'preprocessed_data_NoPercentClip_final2.h5'

## Preprocessing
reverse: False # so B CT is sent as moving and A CBCT is fixed
flip_prob: 0 #.5 #0.5
rot_prob: 0 #.5 #0.5
padding_size: null # Padding to hegith, width   [256, 256] -> [target_height, target_width]
crop_size: [64, 64] # Random crop to hegith, width  [96, 96] -> [target_height, target_width]
#output_size: (384, 320, 128)
## Intenional Misalignment
# misalign_x: 0
# misalign_y: 0
# degree: 0
# motion_prob: 0
# deform_prob: 0